/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mibapplikation;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author Blazl
 */
public class WindowAgentAlienDatesJP extends javax.swing.JPanel {
    
    private String alienId;
    private InfDB idb;
    /**
     * Creates new form WindowAgentAlienDatesJP
     */
    public WindowAgentAlienDatesJP(InfDB idb) {
        initComponents();
        this.idb = idb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMessage = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        txtfStartDate = new javax.swing.JTextField();
        txtfEndDate = new javax.swing.JTextField();
        lblStartDate = new javax.swing.JLabel();
        lblEndDate = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtListAliens = new javax.swing.JTextArea();
        lblMessageFormat = new javax.swing.JLabel();

        setBackground(new java.awt.Color(40, 40, 40));

        lblMessage.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        lblMessage.setForeground(new java.awt.Color(255, 96, 96));
        lblMessage.setText(" ");

        btnSave.setText("Visa aliens");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblStartDate.setForeground(new java.awt.Color(255, 255, 255));
        lblStartDate.setText("Från och med:");

        lblEndDate.setForeground(new java.awt.Color(255, 255, 255));
        lblEndDate.setText("Till och med:");

        txtListAliens.setBackground(new java.awt.Color(79, 79, 79));
        txtListAliens.setColumns(20);
        txtListAliens.setForeground(new java.awt.Color(255, 255, 255));
        txtListAliens.setRows(5);
        jScrollPane1.setViewportView(txtListAliens);

        lblMessageFormat.setForeground(new java.awt.Color(255, 255, 255));
        lblMessageFormat.setText("Datumet ska skrivas in i formatet: YYYY-MM-DD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave)
                    .addComponent(lblMessageFormat)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addComponent(lblMessageFormat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStartDate)
                    .addComponent(lblEndDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        int alienCounter = 0;
        lblMessage.setText(" ");
        txtListAliens.setText("");

        if (Validation.validationTxt(txtfStartDate, lblMessage, "Ange ett fr.o.m. datum")
            && Validation.validationTxt(txtfEndDate, lblMessage, "Ange ett t.o.m. datum")
            && Validation.validationTxtDate(txtfStartDate, lblMessage)
            && Validation.validationTxtDate(txtfEndDate, lblMessage)) {

            /*Behöver ytterligare en validation som kan ge ett felmeddleande om man skriver in något annat
            än ett datum i rätt format i text-rutorna och om det inte finns några alien för den perioden*/
            //Konvertera de inkommande string-värdena till datum av klassen LocalDate.
            LocalDate startDate = LocalDate.parse(txtfStartDate.getText());
            LocalDate endDate = LocalDate.parse(txtfEndDate.getText());

            int checkDate = startDate.compareTo(endDate);
            if (checkDate > 0) {
                lblMessage.setText("Startdatumet är större än slutdatumet");
            } else {
                try {
                    String qAlienInfo = "Select namn, alien_id, registreringsdatum from Alien";
                    ArrayList<HashMap<String, String>> alienInfo = idb.fetchRows(qAlienInfo);

                    txtListAliens.append(" ID\t NAMN \n"
                        + "-------\t-------\n");

                    for (HashMap<String, String> element : alienInfo) {
                        LocalDate date = LocalDate.parse(element.get("registreringsdatum"));
                        String namn = element.get("namn");
                        String id = element.get("alien_id");

                        int sizeStart = date.compareTo(startDate);
                        int sizeEnd = date.compareTo(endDate);

                        if (sizeStart >= 0 && sizeEnd <= 0) {
                            alienCounter++;
                            txtListAliens.append(" " + id + "\t " + namn + "\n");
                        }

                    }

                    if (alienCounter == 0) {
                        lblMessage.setText("Inga registrerade aliens för angiven period");
                    }
                } catch (InfException ex) {
                    System.out.println("Databasfel" + ex.getMessage());
                } catch (Exception ex) {
                    System.out.println("Random fel" + ex.getMessage());
                }
            }

        }
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEndDate;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblMessageFormat;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JTextArea txtListAliens;
    private javax.swing.JTextField txtfEndDate;
    private javax.swing.JTextField txtfStartDate;
    // End of variables declaration//GEN-END:variables
}
