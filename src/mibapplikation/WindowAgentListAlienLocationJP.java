/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mibapplikation;

import java.util.ArrayList;
import java.util.HashMap;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author Blazl
 */
public class WindowAgentListAlienLocationJP extends javax.swing.JPanel {
    
    private InfDB idb;
    /**
     * Creates new form WindowAgentListAlienLocationJP
     */
    public WindowAgentListAlienLocationJP(InfDB idb) {
        initComponents();
        this.idb = idb;
        listAllLocations();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSelectLocation = new javax.swing.JLabel();
        cbListLocations = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtShowAliens = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(40, 40, 40));

        lblSelectLocation.setForeground(new java.awt.Color(255, 255, 255));
        lblSelectLocation.setText("VÃ¤lj en plats:");

        cbListLocations.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-----" }));
        cbListLocations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbListLocationsActionPerformed(evt);
            }
        });

        txtShowAliens.setBackground(new java.awt.Color(79, 79, 79));
        txtShowAliens.setColumns(20);
        txtShowAliens.setForeground(new java.awt.Color(255, 255, 255));
        txtShowAliens.setRows(5);
        jScrollPane1.setViewportView(txtShowAliens);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSelectLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbListLocations, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectLocation)
                    .addComponent(cbListLocations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbListLocationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbListLocationsActionPerformed

        txtShowAliens.setText("");
        

            try {

                String query = "SELECT namn, alien_id from Alien \n"
                + "JOIN plats ON Alien.plats = plats.plats_ID\n"
                + "WHERE benamning =" + "'" + cbListLocations.getSelectedItem() + "'";

                ArrayList<HashMap<String, String>> alienInfo = idb.fetchRows(query);

                txtShowAliens.append("ID \t NAMN \n"
                    + "-------\t-------\n");

                for (HashMap<String, String> element : alienInfo) {
                    txtShowAliens.append(element.get("alien_id") + "\t " + element.get("namn") + "\n");

                }

            } catch (InfException ex) {
                System.out.println("Databasfel" + ex.getMessage());
            } catch (Exception ex) {
                System.out.println("Random fel" + ex.getMessage());
            }
        
    }//GEN-LAST:event_cbListLocationsActionPerformed
    
    private void listAllLocations() {

        try {
            String query = "SELECT benamning FROM plats";
            ArrayList<String> listLocations = idb.fetchColumn(query);

            for (String element : listLocations) {

                cbListLocations.addItem(element);

            }
        } catch (InfException ex) {
            System.out.println("Databasfel" + ex.getMessage());
        } catch (Exception ex) {
            System.out.println("Random fel" + ex.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbListLocations;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSelectLocation;
    private javax.swing.JTextArea txtShowAliens;
    // End of variables declaration//GEN-END:variables
}
